name: Code Examples

on:
  pull_request:
  release:
    types:
      - published

jobs:
  list-code-examples:
    name: Code Example Updates
    runs-on: ubuntu-latest
    outputs:
      code-examples: ${{ steps.list-code-examples.outputs.code-examples }}
    steps:
      - uses: actions/checkout@v3
      - name: List code examples
        id: list-code-examples
        run: |
          (echo -n "code-examples="; printf '[%s""]' $(find apps/code-examples/src/app/code-examples -mindepth 1 -maxdepth 1 -type d -printf '"%f",') | jq -rc 'map(select(. != ""))') >> $GITHUB_OUTPUT

  update:
    name: Update ${{ matrix.code-example }}
    runs-on: ubuntu-latest
    needs: list-code-examples
    strategy:
      matrix:
        code-example: ${{ fromJson(needs.list-code-examples.outputs.code-examples) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Update
        run: |
          set -eo pipefail
          npx nx g @skyux-sdk/code-examples:build ${{ matrix.code-example }}
          echo "üîí Generate lock files"
          bash ./dist/libs/sdk/code-examples-sdk/generate-lock-files.sh
          echo "üõ†Ô∏è Build and test code examples"
          bash ./dist/libs/sdk/code-examples-sdk/build-test.sh
          # TODO: Add e2e test that the code examples are working and not logging errors.
          echo "üßπ Clean ignored files"
          bash ./dist/libs/sdk/code-examples-sdk/clean-ignored-files.sh
      - name: Save artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.code-example }}
          path: dist/libs/sdk/code-examples-sdk/for-github/${{ matrix.code-example }}
          retention-days: 1

  publish:
    if: github.event_name == 'release'
    name: Publish
    needs: update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: blackbaud/skyux-code-examples
          ref: main
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - name: Clear existing code examples
        run: git rm -rf .
      - name: Download code examples
        uses: actions/download-artifact@v3
      - name: Commit code examples
        run: |
          git config user.name 'Blackbaud Sky Build User'
          git config user.email 'sky-build-user@blackbaud.com'
          git add -A .
          git commit -m "chore: update code examples for skyux v${{ github.event.release.tag_name }}"
          git push origin main
